[project]
name = "pos"
dynamic = ["version"]
description = "Pós-Graduação em Epidemiologia e Saúde Única"
readme = "README.md"
license = "GPL-2.0-only"
requires-python = ">=3.12"
authors = [
    { name = "Fernando Ferreira", email = "fernandoferreira@usp.br" },
]
keywords = [
    "CMS",
    "Plone",
    "Python",
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Environment :: Web Environment",
    "Framework :: Plone","Framework :: Plone :: 6.1",
    "Framework :: Plone :: Addon",
    "License :: OSI Approved :: GNU General Public License v2 (GPLv2)",
    "Operating System :: OS Independent",
    "Programming Language :: Python","Programming Language :: Python :: 3.12",
]
dependencies = [
    "Products.CMFPlone==6.1.1",
    "plone.api",
    "plone.restapi",
    "plone.volto",
]

[project.optional-dependencies]
test = [
    "plone.app.testing",
    "plone.restapi[test]",
    "pytest",
    "pytest-cov",
    "pytest-plone>=0.5.0",
]

[project.urls]
Homepage = "https://github.com/fferreir/pos"
PyPI = "https://pypi.org/project/pos"
Source = "https://github.com/fferreir/pos"
Tracker = "https://github.com/fferreir/pos/issues"


[project.entry-points."plone.autoinclude.plugin"]
target = "plone"

[tool.uv]
managed = false

[tool.hatch.version]
path = "src/pos/__init__.py"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build]
strict-naming = true

[tool.hatch.build.targets.sdist]
exclude = [
  "/.github",
]

[tool.hatch.build.targets.wheel]
packages = ["src/pos"]

[tool.towncrier]
directory = "news/"
filename = "CHANGES.md"
start_string = "<!-- towncrier release notes start -->\n"
title_format = "## {version} ({project_date})"
template = "news/.changelog_template.jinja"
issue_format = "[#{issue}](https://github.com/fferreir/pos/issues/{issue})"
underlines = ["", "", ""]

[[tool.towncrier.type]]
directory = "breaking"
name = "Breaking changes:"
showcontent = true

[[tool.towncrier.type]]
directory = "feature"
name = "New features:"
showcontent = true

[[tool.towncrier.type]]
directory = "bugfix"
name = "Bug fixes:"
showcontent = true

[[tool.towncrier.type]]
directory = "internal"
name = "Internal:"
showcontent = true

[[tool.towncrier.type]]
directory = "documentation"
name = "Documentation:"
showcontent = true

[[tool.towncrier.type]]
directory = "tests"
name = "Tests"
showcontent = true

[tool.ruff]
target-version = "py312"
line-length = 88
fix = true
lint.select = [
    # flake8-2020
    "YTT",
    # flake8-bandit
    "S",
    # flake8-bugbear
    "B",
    # flake8-builtins
    "A",
    # flake8-comprehensions
    "C4",
    # flake8-debugger
    "T10",
    # flake8-simplify
    "SIM",
    # mccabe
    "C90",
    # pycodestyle
    "E", "W",
    # pyflakes
    "F",
    # pygrep-hooks
    "PGH",
    # pyupgrade
    "UP",
    # ruff
    "RUF",
]
lint.ignore = [
    # DoNotAssignLambda
    "E731",
]

[tool.ruff.lint.isort]
case-sensitive = false
no-sections = true
force-single-line = true
from-first = true
lines-after-imports = 2
lines-between-types = 1
order-by-type = false

[tool.ruff.format]
preview = true

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["E501", "RUF001", "S101"]

[tool.check-manifest]
ignore = [
    ".editorconfig",
    ".flake8",
    "dependabot.yml",
    "mx.ini",
]

[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.coverage.run]
source_pkgs = ["pos", "tests"]
branch = true
parallel = true